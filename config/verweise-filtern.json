[
  {
    "op": "core/column-removal",
    "columnName": "item_display_mv",
    "description": "Remove column item_display_mv"
  },
  {
    "op": "core/column-removal",
    "columnName": "item_holding_display_mv",
    "description": "Remove column item_holding_display_mv"
  },
  {
    "op": "core/column-removal",
    "columnName": "item_holding_id_mv",
    "description": "Remove column item_holding_id_mv"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "item_id_mv",
    "expression": "grel:filter(value.split('␟'),v,isNonBlank(v.cross('exemplare','id'))).join('␟')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Verweise auf Exemplare entfernen, die nicht im Projekt Exemplare vorhanden sind"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "item_id_mv",
    "expression": "grel:forEach(value.split('␟'),v,forNonBlank(v.cross('exemplare','id')[0].cells['display'].value, x, x, '␣')).join('␟')",
    "onError": "set-to-blank",
    "newColumnName": "item_display_mv",
    "columnInsertIndex": 131,
    "description": "Create column item_display_mv at index 131 based on column item_id_mv using expression grel:forEach(value.split('␟'),v,forNonBlank(v.cross('exemplare','id')[0].cells['display'].value, x, x, '␣')).join('␟')"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "item_id_mv",
    "expression": "grel:forEach(value.split('␟'),v,forNonBlank(v.cross('exemplare','id')[0].cells['holding_display_mv'].value, x, x, '␣')).join('␟')",
    "onError": "set-to-blank",
    "newColumnName": "item_holding_display_mv",
    "columnInsertIndex": 131,
    "description": "Create column item_holding_display_mv at index 131 based on column item_id_mv using expression grel:forEach(value.split('␟'),v,forNonBlank(v.cross('exemplare','id')[0].cells['holding_display_mv'].value, x, x, '␣')).join('␟')"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "item_id_mv",
    "expression": "grel:forEach(value.split('␟'),v,forNonBlank(v.cross('exemplare','id')[0].cells['holding_id_mv'].value, x, x, '␣')).join('␟')",
    "onError": "set-to-blank",
    "newColumnName": "item_holding_id_mv",
    "columnInsertIndex": 131,
    "description": "Create column item_holding_id_mv at index 131 based on column item_id_mv using expression grel:forEach(value.split('␟'),v,forNonBlank(v.cross('exemplare','id')[0].cells['holding_id_mv'].value, x, x, '␣')).join('␟')"
  }
]
